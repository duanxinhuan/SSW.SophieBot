# Sophie Bot Frontend deployment
name: SophieBotCICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [DevOps]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  SourceDir: src/SSW.SophieBot/SSWSophieBot
  BotName: ${{ secrets.BotName }}
  MicrosoftAppId: ${{ secrets.MICROSOFTAPPID }}
  MicrosoftAppPassword: ${{ secrets.MICROSOFTAPPPASSWORD }}
  ResourceGroupName: ${{ secrets.RESOURCEGROUPNAME }}
  WebAppName: ${{ secrets.WebAppName }}
  WebAppPublishProfile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SOPHIEBOT }}
  # LUIS
  LuisAuthoringRegion: ${{ secrets.LUIS_AUTHORING_REGION }}
  LuisAuthoringEndpoint: ${{ secrets.LUIS_AUTHORING_ENDPOINT }}
  LuisAuthoringKey: ${{ secrets.LUIS_AUTHORING_KEY }}
  LuisEndpoint: ${{ secrets.LUIS_ENDPOINT }}
  LuisEndpointKey: ${{ secrets.LUIS_ENDPOINT_KEY }}

jobs:
  # This workflow contains a single job called "build"
  # setup:
  #   name: Set up tool sets ðŸ› 
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     # # Runs a single command using the runners shell
  # - name: Set up Node 14
  #   uses: actions/setup-node@v2
  #   with:
  #     node-version: "14"

  # - name: Setup dotnet
  #   uses: actions/setup-dotnet@v1
  #   with:
  #     dotnet-version: "3.1.x"

  build-and-deploy-luis:
    name: Build and Deploy LUIS models
    runs-on: ubuntu-latest
    steps:
      - name: Set up Bot Framework CLI ðŸ”¨
        run: |
          npm install -g @microsoft/botframework-cli

      - uses: actions/checkout@v2

      - name: Prepare working folders
        shell: pwsh
        env:
          generatedDirectory: ${{env.SourceDir}}/generated
        run: |
          # Clean and recreate the generated directory
          if (Test-Path ${env:generatedDirectory})
          {
            Remove-Item -Path ${env:generatedDirectory} -Force -Recurse
          }

          # Create interruption folder
          New-Item -Path "${{env.generatedDirectory}}" -name "interruption" -ItemType "directory"

      - name: Cross train LU models
        shell: pwsh
        env:
          outputDirectory: ${{env.SourceDir}}/generated/interruption
        run: |
          bf luis:cross-train --in ${env:SourceDir} --out ${env:outputDirectory} --config ${env:SourceDir}/settings/cross-train.config.json --force

          # List generated files for checking purpose
          cd ${env:outputDirectory}
          ls -R

      - name: Build and publish LUIS
        shell: pwsh
        working-directory: src/SSW.SophieBot/SSWSophieBot
        run: | 
            .\BUILD-LUIS.ps1 `
            -outputDirectory ./generated `
            -sourceDirectory ./ `
            -crossTrainedLUDirectory ./generated/interruption `
            -authoringKey ${{ env.LuisAuthoringKey }} `
            -botName ${{ env.BotName }} `
            -luisEndPoint ${{env.LuisEndpoint}}`
            -region ${{env.LuisAuthoringRegion}}`
